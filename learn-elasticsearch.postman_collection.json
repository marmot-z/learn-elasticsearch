{
	"info": {
		"_postman_id": "44fc8ce7-60d0-4c05-8fd9-c658350e939f",
		"name": "learn-elasticsearch",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "8461921"
	},
	"item": [
		{
			"name": "install",
			"item": [
				{
					"name": "get elasticsearch version",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('elasticsearch start successful', function() {",
									"    let body = pm.response.json();",
									"    let version = pm.collectionVariables.get('esVersion');",
									"",
									"    return pm.response.status == 200 &&",
									"            body.version.name === version;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{esHost}}",
							"host": [
								"{{esHost}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const elasticsearchHost = 'http://localhost:9200';",
					"const elasticsearchVersion = '7.17.0';",
					"",
					"pm.collectionVariables.set('esHost', elasticsearchHost);",
					"pm.collectionVariables.set('esVersion', elasticsearchVersion);",
					"",
					"/**",
					" * global function",
					" */",
					"utils = {",
					"",
					"    /**",
					"     * 创建 es 索引",
					"     * ",
					"     * @param indexName 索引名称",
					"     * @param mappings mappings",
					"     * @param settings settings",
					"     * @return {{Promise}} promise",
					"     */",
					"    createIndex: function(indexName, mappings, settings) {",
					"        if (!indexName) {",
					"            throw new Error('索引名称不能为空');",
					"        }",
					"",
					"        return new Promise((resolve, reject) => {",
					"            pm.sendRequest({",
					"                url: `${elasticsearchHost}/${indexName}`,",
					"                method: 'PUT',",
					"                body: {",
					"                    settings: settings,",
					"                    mappings: mappings",
					"                }",
					"            }, (err, resp) => {",
					"                if (err) return reject(err);",
					"",
					"                let body = resp.json();",
					"",
					"                resolve(body.acknowledged && body.index === indexName);",
					"            })",
					"        });",
					"    },",
					"",
					"    ",
					"    deleteIndex: function(indexName) {},",
					"",
					"    saveDocument: function (indexName, doc, id) {},",
					"",
					"    updateDocument: function (indexName, doc, id) {},",
					"",
					"    deleteDocument: function(indexName, id) {}",
					"};"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "esHost",
			"value": ""
		},
		{
			"key": "esVersion",
			"value": ""
		}
	]
}